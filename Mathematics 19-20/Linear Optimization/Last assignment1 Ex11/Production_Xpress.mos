!@encoding CP1252
model ModelName
uses "mmxprs"; 

!Declaramos las variables de nuestro ejercicio
declarations
tipo=1..3!tipo de presentación, 1=economicas,2=basicas,3=premium
planta=1..4!número de plantas: 1=planta 1, 2=planta 2, 3=planta 3 y 4=planta 4
plantaAUX=2..4
x:array(tipo,planta)of mpvar !variables de producción
ganancias:array(tipo,planta)of real !precio de venta de las unidades producidas
capacProdMax:array(planta)of real!producción máxima de cada planta
espacioOcupado:array(tipo)of real !espacio ocupado por cada unidad producida
capacAlmac:array(planta)of real !capacidad máxima de almacenamiento de cada planta 
demandaTOT:array(tipo)of real!demanda total
end-declarations

(!Inicializamos las variables declaradas anteriormente haciendo uso de un archovo
de texto importado!)
initializations from 'ejercicio11.txt'
ganancias capacProdMax espacioOcupado capacAlmac demandaTOT
end-initializations

!Exigimos que todas las variables de decisión sean enteras
forall(t in tipo,p in planta)do
	x(t,p) is_integer
end-do

objetivo:=sum(t in tipo, p in planta)ganancias(t,p)*x(t,p)

!Capacidad de producción máxima de cada planta
forall(p in planta) sum(t in tipo)1*x(t,p)<=capacProdMax(p)

!Capacidad de almacenaje de cada planta
forall(p in planta) sum(t in tipo)espacioOcupado(t)*x(t,p)<=capacAlmac(p)

!Satisfacer la demanda
forall(t in tipo) sum(p in planta)1*x(t,p)<=demandaTOT(t)

(!Capacidad de producción adicional equitativa para todas las plantas,
la proporción de unidades producidas debe ser equitativa en todas las plantas!)
forall (p in plantaAUX, t in tipo)(capacProdMax(p)/capacProdMax(p-1))*x(t,p-1)=x(t,p)


maximize(objetivo)

!Diseñamos la salida de datos
writeln('Ganancia total=' , getobjval, ' euros')

(!El primer subíndice hace referencia al tipo de presentación (economicas, básicas
 o premium y el segundo a la planta donde ha sido producido!) 
writeln
	forall(p in planta) do
	writeln('Resultados de la planta ', p, ':')
		forall(t in tipo)do
			writeln('x(' ,t, ',',p,')=',getsol(x(t,p)) )
		end-do
		writeln
	end-do

end-model
